BaseGeometry
============
Importing class from the module:

	>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry
	>>> bg = BaseGeometry()

>>> bg.integer_validator("width", 12)
>>> bg.integer_validator("width", 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 16, in integer_validator
    raise ValueError("{:s} must be greater than 0".format(name))
ValueError: width must be greater than 0
>>> bg.integer_validator("width", -2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 16, in integer_validator
    raise ValueError("{:s} must be greater than 0".format(name))
ValueError: width must be greater than 0
>>> bg.integer_validator("width", 2.0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 14, in integer_validator
    raise TypeError("{:s} must be an integer".format(name))
TypeError: width must be an integer
>>> bg.integer_validator("width", -2.0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 14, in integer_validator
    raise TypeError("{:s} must be an integer".format(name))
TypeError: width must be an integer
>>> bg.integer_validator("width", "one")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 14, in integer_validator
    raise TypeError("{:s} must be an integer".format(name))
TypeError: width must be an integer
>>> bg.integer_validator("width", float('inf'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 14, in integer_validator
    raise TypeError("{:s} must be an integer".format(name))
TypeError: width must be an integer
>>> bg.integer_validator(2, 3)
>>> bg.integer_validator(2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'
