The add_integer module
=======================

This module return the sum of two integers

>>> add_integer = __import__("0-add_integer").add_integer
>>> add_integer(1, 2)
3

>>> add_integer(-2, -3)
-5

>>> add_integer(2.2, 4)
6

>>> add_integer(2.0, 3.0)
5

>>> add_integer(2)
100

# missing arguments
>>> add_integer()
Traceback (most recent call last):
	File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'


# passing non-integer arguments

>>> add_integer("name")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 11, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

>>> add_integer(3, "name")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 13, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 11, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

>>> add_integer(float("inf"), 7)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 14, in add_integer
    return int(a) + int(b)
OverflowError: cannot convert float infinity to integer

>>> add_integer(float("nan"), 4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 14, in add_integer
    return int(a) + int(b)
ValueError: cannot convert float NaN to integer
