Divide Matrix Module
====================
# A function that divides the elements of a matrix and return
# a new matrix with the result to 2 decimal places
# It also checks for possilbe edge cases

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67], [1.0, 1.33]]

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 12, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero

>>> matrix = [["name", 2], [3, 4]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 22, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of "
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 1, 2], [3, 4]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 19, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, float("inf"))
[[0.0, 0.0], [0.0, 0.0]]


